//CPE301 Final Project
//Dylan Mendoza
//Caleb Lindner
//Hunter Robinson

#include "DHT.h"
#include <LiquidCrystal.h>

#define DHTTYPE DHT11
#define DHTPIN 12

DHT dht(DHTPIN, DHTTYPE);

//pins used = A0, 2, 4, 5, 6, 10, 11, 13, 22, 23, 24, 25

//A0 will be b00000001

//pins 2,4, 5, and 6 will be 00111010

//pins 10, 11, and 13 will be 

//pins 22, 23, 24, 25 will be Port A = 0001111

volatile unsigned char* port_d = (unsigned char*) 0x2B;
volatile unsigned char* ddr_d = (unsigned char*) 0x2A;
volatile unsigned char* pin_d = (unsigned char*) 0x29;
volatile unsigned char* port_k = (unsigned char*) 0x108;
volatile unsigned char* ddr_k = (unsigned char*) 0x107;
volatile unsigned char* pin_k = (unsigned char*) 0x106;
volatile unsigned char* port_e = (unsigned char*) 0x2E;
volatile unsigned char* ddr_e = (unsigned char*) 0x2D;
volatile unsigned char* pin_e = (unsigned char*) 0x2C;
volatile unsigned char* port_h = (unsigned char*) 0x102;
volatile unsigned char* ddr_h = (unsigned char*) 0x101;
volatile unsigned char* pin_h = (unsigned char*) 0x100;
volatile unsigned char* port_b = (unsigned char*) 0x25;
volatile unsigned char* ddr_b = (unsigned char*) 0x24;
volatile unsigned char* pin_b = (unsigned char*) 0x23;
volatile unsigned char* port_g = (unsigned char*) 0x34;
volatile unsigned char* ddr_g = (unsigned char*) 0x33;
volatile unsigned char* pin_g = (unsigned char*) 0x32;


const int rs = 11; //regiister
const int en = 10; //regiister
const int d4 = 22; //regiister
const int d5 = 23; //regiister
const int d6 = 24; //regiister
const int d7 = 25; //regiister

const int fan =13; //regiister
const int power = 2; //regiister
const int error = 5; //regiister
const int on = 6; //regiister
const int off = 4; //regiister
const int level = A0; //regiister

//Variables
float temp;
float hum;
int powerStateCurrent = 0;
int powerStateLast;
int systemState = 1;
float water;

LiquidCrystal lcd(rs, en, d4, d5, d6, d7);

void setup() {
  // put your setup code here, to run once:
DDR_B &= 0b10000000;  //pinMode(fan, OUTPUT); register
DDR_E |= 0b11101111; //pinMode(power, INPUT);

Serial.begin(9600); //register
lcd.begin(16, 2);
dht.begin();
}

void loop() {

  water = analogRead(level); //collect water level in cooler, register

  //LCD Display Portion, takes readings and then writes temp and hummidity to lcd
  temp = dht.readTemperature();
  hum = dht.readHumidity();
  lcd.setCursor(0,0);
  lcd.print("Temp C: ");
  lcd.print(temp,2);
  lcd.setCursor(0,1);
  lcd.print("Humidity: ");
  lcd.print(hum, 2);  

  //turns fan on or off depending on read temperature from the above portion
  if(temp>24){
    Port_B = 0b10000000; //digitalWrite(fan,HIGH); register
  }else if(temp<20){
    Port_B = 0b01111111; //digitalWrite(fan,LOW); register
  }
  

  //error portion, if there is an error happening, it is detected here
  if(isnan(temp) || isnan(hum)|| water<180){
  
   Serial.println("Error"); //register
   Port_E = 0b00100000;  //digitalWrite(error, HIGH); register
   Port_H = 0b11110111;  //digitalWrite(on, LOW);  regsiter
   Port_G = 0b11011111; //digitalWrite(off, LOW); //register
   Port_B = 0b01111111; //digitalWrite(fan,LOW); //register
   return;
  }

  //System switch on and off
  powerStateLast = powerStateCurrent;
  powerStateCurrent = digitalRead(power);
if(powerStateCurrent == HIGH && powerStateLast == LOW){ //using a pull down resistor button to toggle the system state
  systemState = !systemState;  
}

if(systemState == 0){
  Port_G = 0b00100000; //digitalWrite(off,HIGH); register
  Port_H = 0b11110111; //digitalWrite(on,LOW); register
  Port_B = 0b01111111;  //digitalWrite(fan,LOW); register
  lcd.noDisplay();
}
else{
  Port_H = 0b00001000; //digitalWrite(on,HIGH); register
  Port_G = 0b11011111;  //digitalWrite(off,LOW); register
  lcd.display();
  return;
}

}
